@model Achados_e_Perdidos_Prototipo.Models.ItemsMapa
@{
    ViewBag.Title = "AchadosPerdidos";
}

<script src="~/Scripts/js/markerclusterer.js"></script>
<script src="~/Scripts/js/mapaPerdiEncontrei.js"></script>
<script src="~/Scripts/js/jquery-ui.custom.min.js"></script>

<section class="section offset-header">

	<div class="container">

		<div class="row">

			<div class="box">

				<div class="col-lg-12">
					<hr>
					<h4>
						Veja no mapa se alguém já cadastrou o objeto perdido e entre em contato. Caso não, clique no botão cadastrar.

					</h4>

					<a class="btn btn-cta-secondary scrollto" @Html.ActionLink("Cadastrar", "Perdi", "Home")</a>
					

				</div>

				<div class="col-md-8">
					<!-- Embedded Google Map using an iframe - to select your location find it on Google maps and paste the link as the iframe src. If you want to use the Google Maps API instead then have at it! -->
					<!-- Este é o div que conterá o mapa do Google -->
					<div id="map_canvas" class="container" style="height: 500px; width: 700px"></div>
				</div>


				<!-- Este css é garantir que o mapa do Google ( contols zoom bar etc) mostram e tamanho corretamente. -->
				<style>
					#map_canvas {
						margin-top: 10px;
					}
				</style>

				<!-- Este css é dar um bom pop-up grande " janela de informações " quando um marcador é clicado no mapa -->
				<style>
					.infoDiv {
						height: 150px;
						width: 250px;
						-webkit-user-select: none;
						background-color: white;
					}
				</style>

				<!-- Este é o div que conterá o mapa do Google -->
				@*<div id="map_canvas" style="height: 380px;"></div>*@

				<!-- Coloque o Javascript em uma " seção" de modo que ela é processada na ordem correta após scripts foram carregados etc -->




			</div>

			<div class="col-md-4">
				<form role="form">
					<div class="row">

						<div class="col-lg-12 text-center">
							<hr>
							<h4>
								Filtros
							</h4>
							<hr>

						</div>

						@*combo categoria*@
						<div class="form-group col-lg-12">

							@using (Html.BeginForm())
							{

								@Html.DropDownList("Categoria", ViewBag.idCategoria as SelectList, "Categoria", new { @class = "form-control" })


							}

						</div>
						@*fim combo categoria*@


						<div class="form-group col-lg-12">

							<select id="subCategoria" class="form-control">
								<option>Subcategoria</option>
							</select>

						</div>

						<div class="form-group col-lg-12">

							<select id="DescricaosubCategoria" class="form-control">
								<option>Complemento</option>
							</select>

						</div>


						<div class="form-group col-lg-12">
                                                     

							<div class="col-md-4">
								<button type="button" id="btnAplicarFiltro" name="btnAplicarFiltro" value="Filtrar" class="btn btn-cta-primary scrollto">Filtrar</button>
							</div>

                            <div class="col-md-4">
                                <button type="button" id="btnCancelar" name="btnCancelar" value="Cancelar" class="btn btn-cta-primary scrollto" style="background-color:chocolate">Cancelar</button>
                            </div>

                            

						</div>
					</div>
				</form>
			</div>
		</div>
	</div>


</section>

<script src="http://maps.google.com/maps/api/js?sensor=true"></script>

<script type="text/javascript">

	$(document).ready(function () {
		Initialize("Perdidos");
	});

	btnAplicarFiltro.onclick = function () {


		Initialize("Perdidos-" + $('#Categoria').val() + "-"
					+ $('#subCategoria').val());
	}

	btnCancelar.onclick = function () {

		Initialize("Perdidos");
	}

	// Onde toda a diversão acontece
	function Initialize(tipo) {

		// Google já preparou sua interface um pouco - diz ao api para usar essa nova interface
		google.maps.visualRefresh = true;

		var PosicaoInicial = new google.maps.LatLng(-15.834550776033826, -45.46140078124985);

		// Estas são opções que definem o nível de zoom inicial, onde o mapa está centralizado a nível mundial para começar, e do tipo de mapa para mostrar
		var mapOptions = {
			zoom: 4,
			center: PosicaoInicial,
			mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
		};

		// Isso faz com que o div com id " map_canvas " um mapa do Google
		var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

		$.getJSON("/Home/GetItemMapa?tipoItems=" + tipo, function (data) {
			console.log(data);


			var Arraydata = [];
			//você pode fazer -se um lado do servidor lista JSON, ou chamá-lo de um controlador usando JsonResult

			for (var i = 0; i < data.length; i++) {
				console.log("estou dentro");

				Arraydata.push({
					"Id": data[i].idItem, "Categoria": data[i].Categoria,
					"SubCategoria": data[i].SubCategoria, "Contato": data[i].email,
					"GeoLong": data[i].Longitude, "GeoLat": data[i].Latitude, "Nome": data[i].Nome,
					"Sobrenome": data[i].Sobrenome, "Tel": data[i].Tel, "Celular": data[i].Celular
				});
			}

			var markers = [];

			// Usando o JQuery " cada " seletor para percorrer a lista de JSON e soltar os pinos do marcador
			$.each(Arraydata, function (i, item) {
				var marker = new google.maps.Marker({
					'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
					'map': map,
					'title': item.Categoria


				});
				// Faça o marcador azul -pin !
				marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')


				//marker.setIcon('images/1441261575_Map-Marker-Marker-Inside-Azure.png')

				// colocar em algum informações sobre cada objeto JSON - neste caso , o horário de funcionamento .
				var infowindow = new google.maps.InfoWindow({
					content: "<div class='infoDiv'><h2>" + item.Categoria
						+ "</h2>" + "<div><h4>SubCategora: " + item.SubCategoria
						+ "</h2>" + "<div><h4>Contato: " + item.Contato + "<div><h4>Nome: "
						+ item.Nome + "<div><h4>Sobrenome: " + item.Sobrenome + "<div><h4>Telefone: "
						+ item.Tel + "<div><h4>Celular: " + item.Celular + " </h4></div></div>"
				});


				markers.push(marker);

				// finalmente ligar um " OnClick " ouvinte para o mapa para que ele aparece fora info- janela quando o marcador de pino é clicado !
				google.maps.event.addListener(marker, 'click', function () {
					infowindow.open(map, marker);
				});

			})

			var markerCluster = new MarkerClusterer(map, markers);

		});


	}


	$("#Categoria").change(function () {

		$("#DescricaosubCategoria").empty();
		$("#subCategoria").empty();
		if ($('#Categoria option:selected').text() != "Escolha a Categoria...") {

			var idCategoria = $(this).val();
			$.getJSON("/Home/GetsubCategoria?categoria=" + idCategoria, function (data) {
				$("#subCategoria").empty();
				$("#DescricaosubCategoria").empty();
				console.log(data);

				$("<option name='subCategoria' value='" + 0 + "'>" + "Escolha a Subcategoria..." + "</option><br>")
					.appendTo("#subCategoria");

				$("<option name='DescricaosubCategoria' value='" + 0 + "'>" + "Complemento..." + "</option><br>")
					.appendTo("#DescricaosubCategoria");

				for (var i = 0; i < data.length; i++) {
					console.log("estou dentro");
					$("<option name='subCategoria' value='" + data[i].idSubCat + "'>" + data[i].SubCatego + "</option><br>")
						.appendTo("#subCategoria");
				}
			});

		}
		else {

			$("<option name='subCategoria' value='" + 0 + "'>" + "Escolha a SubCategoria..." + "</option><br>")
				.appendTo("#subCategoria");

			$("<option name='DescricaosubCategoria' value='" + 0 + "'>" + "Complemento..." + "</option><br>")
				.appendTo("#DescricaosubCategoria");

		}


	});

